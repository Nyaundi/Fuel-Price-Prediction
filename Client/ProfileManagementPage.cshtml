@model Fuel_Price_Prophecy.ViewModels.ProfileManagementViewModel
@{
	ViewBag.Title = "ProfileManagementPage";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
	if (!string.IsNullOrWhiteSpace(Model.OutcomeOfValidatingProfiles))
	{
		if (Model.OutcomeOfValidatingProfiles == "SomeNullInput")
		{
			<div class="alert alert-dismissible alert-danger">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Error!</strong> <a href="#" class="alert-link">Fields with <font color="#ED4040">*</font> are required</a>
			</div>
		}
		else if (Model.OutcomeOfValidatingProfiles == "InvalidZipCode")
		{
			<div class="alert alert-dismissible alert-danger">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Error!</strong> <a href="#" class="alert-link">Invalid Zipcode</a>
			</div>
		}
		else if (Model.OutcomeOfValidatingProfiles == "UnableToUpdate")
		{
			<div class="alert alert-dismissible alert-danger">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Error!</strong> <a href="#" class="alert-link">Unable To Update</a>
			</div>
		}
		else if (Model.OutcomeOfValidatingProfiles == "UnexpectedError")
		{
			<div class="alert alert-dismissible alert-danger">
				<button type="button" class="close" data-dismiss="alert">&times;</button>
				<strong>Error!</strong> <a href="#" class="alert-link">Unexpected Error</a>
			</div>
		}
	}
}
	<center>
		<div class="card text-white bg-secondary mb-3" style="max-width: 25rem;">
			<div class="card-header">
				<h1><font color="#FCF3CF">Profile Management</font></h1>
				<small class="form-text text-muted"><font color="#ED4040">* Indicates Required Fields</font></small>
			</div>
			<div class="card-body">
				@using (Html.BeginForm("ManagingProfile", "Client"))
				{

					@Html.Hidden("clientId", Model.Client.ClientId)

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.Name)</font><font color="#ED4040">*</font>

						@Html.TextBoxFor(m => m.ClientProfile.Name, new { @class = "form-control", placeholder = "John/Jane Doe", maxlength = 50 })
						<small class="form-text text-muted">Maximum 50 characters</small>
					</div>

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.Address1)</font><font color="#ED4040">*</font>

						@Html.TextBoxFor(m => m.ClientProfile.Address1, new { @class = "form-control", placeholder = "StreetNumber StreetName", maxlength = 100 })
						<small class="form-text text-muted">Maximum 100 characters</small>
					</div>

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.Address2)</font>
						@Html.TextBoxFor(m => m.ClientProfile.Address2, new { @class = "form-control", placeholder = "Apartment Number", maxlength = 100 })
						<small class="form-text text-muted">Maximum 100 characters</small>
					</div>

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.City)</font><font color="#ED4040">*</font>
						@Html.TextBoxFor(m => m.ClientProfile.City, new { @class = "form-control", placeholder = "City", maxlength = 100 })
						<small class="form-text text-muted">Maximum 100 characters</small>
					</div>

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.State)</font><font color="#ED4040">*</font>
						@Html.DropDownListFor(m => m.ClientProfile.State, new SelectList(Model.listOfState), "")
						<small class="form-text text-muted">Select From Drop Down List</small>
					</div>

					<div class="form-group" align="left">
						<font color="#FCF3CF">@Html.LabelFor(m => m.ClientProfile.Zipcode)</font><font color="#ED4040">*</font>
						@Html.TextBoxFor(m => m.ClientProfile.Zipcode, new { maxlength = 9, minlength = 5 })
						<small class="form-text text-muted">Maximum 9 characters, at least 5 character code required</small>
					</div>

					<button type="submit" class="btn btn-outline-success btn-lg btn-block">Save Changes &crarr;</button>
				}
			</div>
		</div>
	</center>
